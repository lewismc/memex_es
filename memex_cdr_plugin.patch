Index: build.xml
===================================================================
--- build.xml	(revision 1715901)
+++ build.xml	(working copy)
@@ -177,6 +177,7 @@
       <packageset dir="${plugins.dir}/feed/src/java"/>
       <packageset dir="${plugins.dir}/headings/src/java"/>
       <packageset dir="${plugins.dir}/index-anchor/src/java"/>
+      <packageset dir="${plugins.dir}/index-memex-atf/src/java"/>
       <packageset dir="${plugins.dir}/index-basic/src/java"/>
       <packageset dir="${plugins.dir}/index-metadata/src/java"/>
       <packageset dir="${plugins.dir}/index-more/src/java"/>
@@ -187,6 +188,7 @@
       <packageset dir="${plugins.dir}/mimetype-filter/src/java"/>
       <packageset dir="${plugins.dir}/indexer-dummy/src/java"/>
       <packageset dir="${plugins.dir}/indexer-elastic/src/java/" />
+      <packageset dir="${plugins.dir}/indexer-memex/src/java/" />
       <packageset dir="${plugins.dir}/indexer-solr/src/java"/>
       <packageset dir="${plugins.dir}/language-identifier/src/java"/>
       <packageset dir="${plugins.dir}/lib-http/src/java"/>
@@ -614,6 +616,7 @@
       <packageset dir="${plugins.dir}/feed/src/java"/>
       <packageset dir="${plugins.dir}/headings/src/java"/>
       <packageset dir="${plugins.dir}/index-anchor/src/java"/>
+      <packageset dir="${plugins.dir}/index-memex-atf/src/java"/>
       <packageset dir="${plugins.dir}/index-basic/src/java"/>
       <packageset dir="${plugins.dir}/index-geoip/src/java"/>
       <packageset dir="${plugins.dir}/index-metadata/src/java"/>
@@ -624,6 +627,7 @@
       <packageset dir="${plugins.dir}/mimetype-filter/src/java"/>
       <packageset dir="${plugins.dir}/indexer-dummy/src/java"/>
       <packageset dir="${plugins.dir}/indexer-elastic/src/java/" />
+      <packageset dir="${plugins.dir}/indexer-memex/src/java/" />
       <packageset dir="${plugins.dir}/indexer-solr/src/java"/>
       <packageset dir="${plugins.dir}/language-identifier/src/java"/>
       <packageset dir="${plugins.dir}/lib-http/src/java"/>
@@ -1008,6 +1012,7 @@
         <source path="${plugins.dir}/headings/src/java/" />
         <source path="${plugins.dir}/index-anchor/src/java/" />
         <source path="${plugins.dir}/index-anchor/src/test/" />
+        <source path="${plugins.dir}/index-memex-atf/src/java"/>
         <source path="${plugins.dir}/index-basic/src/java/" />
         <source path="${plugins.dir}/index-basic/src/test/" />
         <source path="${plugins.dir}/index-geoip/src/java/" />
@@ -1018,6 +1023,7 @@
         <source path="${plugins.dir}/indexer-dummy/src/java/" />
         <source path="${plugins.dir}/indexer-solr/src/java/" />
         <source path="${plugins.dir}/indexer-elastic/src/java/" />
+        <source path="${plugins.dir}/indexer-memex/src/java/" />
         <source path="${plugins.dir}/index-metadata/src/java/" />
         <source path="${plugins.dir}/index-more/src/java/" />
         <source path="${plugins.dir}/index-more/src/test/" />
Index: conf/nutch-default.xml
===================================================================
--- conf/nutch-default.xml	(revision 1715901)
+++ conf/nutch-default.xml	(working copy)
@@ -1935,5 +1935,41 @@
     or outlinks.
   </description>
 </property>
+  
+<!-- Memex CDR Properties -->
+<property>
+  <name>memex.cdr.cluster</name>
+  <value></value>
+  <description>
+  </description>
+</property>
 
+<property>
+  <name>memex.cdr.username</name>
+  <value></value>
+  <description>
+  </description>
+</property>
+
+<property>
+  <name>memex.cdr.password</name>
+  <value></value>
+  <description>
+  </description>
+</property>
+
+<property>
+  <name>memex.cdr.index</name>
+  <value></value>
+  <description>
+  </description>
+</property>
+
+<property>
+  <name>memex.cdr.type</name>
+  <value></value>
+  <description>
+  </description>
+</property>
+
 </configuration>
Index: ivy/ivy.xml
===================================================================
--- ivy/ivy.xml	(revision 1715901)
+++ ivy/ivy.xml	(working copy)
@@ -1,131 +1,166 @@
 <?xml version="1.0" ?>
 
 <!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor 
-	license agreements. See the NOTICE file distributed with this work for additional 
-	information regarding copyright ownership. The ASF licenses this file to 
-	You under the Apache License, Version 2.0 (the "License"); you may not use 
-	this file except in compliance with the License. You may obtain a copy of 
-	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
-	by applicable law or agreed to in writing, software distributed under the 
-	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
-	OF ANY KIND, either express or implied. See the License for the specific 
-	language governing permissions and limitations under the License. -->
+  license agreements. See the NOTICE file distributed with this work for additional 
+  information regarding copyright ownership. The ASF licenses this file to 
+  You under the Apache License, Version 2.0 (the "License"); you may not use 
+  this file except in compliance with the License. You may obtain a copy of 
+  the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
+  by applicable law or agreed to in writing, software distributed under the 
+  License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
+  OF ANY KIND, either express or implied. See the License for the specific 
+  language governing permissions and limitations under the License. -->
 
 <ivy-module version="1.0">
-	<info organisation="org.apache.nutch" module="nutch">
-		<license name="Apache 2.0"
-			url="http://www.apache.org/licenses/LICENSE-2.0.txt/" />
-		<ivyauthor name="Apache Nutch Team" url="http://nutch.apache.org" />
-		<description homepage="http://nutch.apache.org">Nutch is an open source web-search
-			software. It builds on
-			Hadoop, Tika and Solr, adding web-specifics,
-			such as a crawler, a link-graph
-			database etc.
-		</description>
-	</info>
-	
-	<configurations>
-		<include file="${basedir}/ivy/ivy-configurations.xml" />
-	</configurations>
-	
-	<publications>
-		<!--get the artifact from our module name -->
-		<artifact conf="master" />
-	</publications>
-	
-	<dependencies>
-		<dependency org="org.slf4j" name="slf4j-api" rev="1.6.1" conf="*->master" />
-		<dependency org="org.slf4j" name="slf4j-log4j12" rev="1.6.1" conf="*->master" />
-		
-		<!--dependency org="log4j" name="log4j" rev="1.2.15" conf="*->default">
-			<exclude org="javax.jms" name="jms" />
-			<exclude org="com.sun.jdmk" name="jmxtools" />
-			<exclude org="com.sun.jmx" name="jmxri" />
-		</dependency-->
-		
-		<dependency org="commons-lang" name="commons-lang" rev="2.6" conf="*->default" />
-		<dependency org="commons-collections" name="commons-collections" rev="3.2.1" conf="*->master" />
-		<dependency org="commons-httpclient" name="commons-httpclient" rev="3.1" conf="*->master" />
-		<dependency org="commons-codec" name="commons-codec" rev="1.10" conf="*->default" />
-        <dependency org="org.apache.commons" name="commons-compress" rev="1.9" conf="*->default" />
-        <dependency org="org.apache.commons" name="commons-jexl" rev="2.1.1" />
-            
-        <!-- Hadoop Dependencies -->
-		<dependency org="org.apache.hadoop" name="hadoop-common" rev="2.4.0" conf="*->default">
-			<exclude org="hsqldb" name="hsqldb" />
-			<exclude org="net.sf.kosmosfs" name="kfs" />
-			<exclude org="net.java.dev.jets3t" name="jets3t" />
-			<exclude org="org.eclipse.jdt" name="core" />
-			<exclude org="org.mortbay.jetty" name="jsp-*" />
-			<exclude org="ant" name="ant" />
-		</dependency>
-        <dependency org="org.apache.hadoop" name="hadoop-hdfs" rev="2.4.0" conf="*->default"/>
-        <dependency org="org.apache.hadoop" name="hadoop-mapreduce-client-core" rev="2.4.0" conf="*->default"/>
-        <dependency org="org.apache.hadoop" name="hadoop-mapreduce-client-jobclient" rev="2.4.0" conf="*->default"/>
-        <!-- End of Hadoop Dependencies -->
+  <info organisation="org.apache.nutch" module="nutch">
+    <license name="Apache 2.0"
+      url="http://www.apache.org/licenses/LICENSE-2.0.txt/" />
+    <ivyauthor name="Apache Nutch Team" url="http://nutch.apache.org" />
+    <description homepage="http://nutch.apache.org">Nutch is an open source web-search
+      software. It builds on
+      Hadoop, Tika and Solr, adding web-specifics,
+      such as a crawler, a link-graph
+      database etc.
+    </description>
+  </info>
 
-		<dependency org="org.apache.tika" name="tika-core" rev="1.10" />
-		<dependency org="com.ibm.icu" name="icu4j" rev="55.1" />
+  <configurations>
+    <include file="${basedir}/ivy/ivy-configurations.xml" />
+  </configurations>
 
-		<dependency org="xerces" name="xercesImpl" rev="2.9.1" />
-		<dependency org="xerces" name="xmlParserAPIs" rev="2.6.2" />
-		<dependency org="oro" name="oro" rev="2.0.8" />
+  <publications>
+    <!--get the artifact from our module name -->
+    <artifact conf="master" />
+  </publications>
 
-		<dependency org="com.google.guava" name="guava" rev="16.0.1" />
+  <dependencies>
+    <dependency org="org.slf4j" name="slf4j-api" rev="1.6.1"
+      conf="*->master" />
+    <dependency org="org.slf4j" name="slf4j-log4j12" rev="1.6.1"
+      conf="*->master" />
+      
+    <dependency org="com.googlecode.json-simple" name="json-simple" rev="1.1.1"
+      conf="*->default" />
 
-		<dependency org="com.github.crawler-commons" name="crawler-commons" rev="0.6" />
+    <dependency org="commons-lang" name="commons-lang" rev="2.6"
+      conf="*->default" />
+    <dependency org="commons-collections" name="commons-collections"
+      rev="3.2.1" conf="*->master" />
+    <dependency org="commons-httpclient" name="commons-httpclient"
+      rev="3.1" conf="*->master" />
+    <dependency org="commons-codec" name="commons-codec" rev="1.10"
+      conf="*->default" />
+    <dependency org="org.apache.commons" name="commons-compress"
+      rev="1.9" conf="*->default" />
+    <dependency org="org.apache.commons" name="commons-jexl"
+      rev="2.1.1" />
 
-		<dependency org="com.martinkl.warc" name="warc-hadoop" rev="0.1.0" />
-		
-        <!--dependency org="org.apache.cxf" name="cxf" rev="3.0.4" conf="*->default"/-->
-        <dependency org="org.apache.cxf" name="cxf-rt-frontend-jaxws" rev="3.0.4" conf="*->default"/>
-        <dependency org="org.apache.cxf" name="cxf-rt-frontend-jaxrs" rev="3.0.4" conf="*->default"/>
-        <dependency org="org.apache.cxf" name="cxf-rt-transports-http" rev="3.0.4" conf="*->default"/>
-        <dependency org="org.apache.cxf" name="cxf-rt-transports-http-jetty" rev="3.0.4" conf="*->default"/>
-        <dependency org="org.apache.cxf" name="cxf-rt-rs-client" rev="3.0.4" conf="test->default"/>
-        <dependency org="com.fasterxml.jackson.core" name="jackson-databind" rev="2.5.1"  conf="*->default"/> 
-        <dependency org="com.fasterxml.jackson.dataformat" name="jackson-dataformat-cbor" rev="2.5.1" conf="*->default"/>
-        <dependency org="com.fasterxml.jackson.jaxrs" name="jackson-jaxrs-json-provider" rev="2.5.1" conf="*->default"/>	
-              
-		<!-- WARC artifacts needed  -->
-		<dependency org="org.netpreserve.commons" name="webarchive-commons" rev="1.1.5" conf="*->default">
-			<exclude module="hadoop-core"/>
-			<exclude org="com.google.guava"/>
-		</dependency>
+    <!-- Hadoop Dependencies -->
+    <dependency org="org.apache.hadoop" name="hadoop-common"
+      rev="2.4.0" conf="*->default">
+      <exclude org="hsqldb" name="hsqldb" />
+      <exclude org="net.sf.kosmosfs" name="kfs" />
+      <exclude org="net.java.dev.jets3t" name="jets3t" />
+      <exclude org="org.eclipse.jdt" name="core" />
+      <exclude org="org.mortbay.jetty" name="jsp-*" />
+      <exclude org="ant" name="ant" />
+    </dependency>
+    <dependency org="org.apache.hadoop" name="hadoop-hdfs"
+      rev="2.4.0" conf="*->default" />
+    <dependency org="org.apache.hadoop" name="hadoop-mapreduce-client-core"
+      rev="2.4.0" conf="*->default" />
+    <dependency org="org.apache.hadoop" name="hadoop-mapreduce-client-jobclient"
+      rev="2.4.0" conf="*->default" />
+    <!-- End of Hadoop Dependencies -->
 
-		<!--artifacts needed for testing -->
-		<dependency org="junit" name="junit" rev="4.11" conf="test->default" />
-		<dependency org="org.mortbay.jetty" name="jetty-client" rev="6.1.22" conf="test->default" />
-		<dependency org="org.mortbay.jetty" name="jetty" rev="6.1.22" conf="test->default" />
-		<dependency org="org.mortbay.jetty" name="jetty-util" rev="6.1.22" conf="test->default" />
-		<!-- end of test artifacts -->
+    <dependency org="org.apache.tika" name="tika-core" rev="1.10" />
+    <dependency org="com.ibm.icu" name="icu4j" rev="55.1" />
 
-		<!-- web app dependencies -->
+    <dependency org="xerces" name="xercesImpl" rev="2.9.1" />
+    <dependency org="xerces" name="xmlParserAPIs" rev="2.6.2" />
+    <dependency org="oro" name="oro" rev="2.0.8" />
 
-    	<dependency org="org.apache.commons" name="commons-collections4" rev="4.0" conf="*->default" />
-    	<dependency org="org.springframework" name="spring-core" rev="4.0.4.RELEASE" conf="*->default" />
-    	<dependency org="org.springframework" name="spring-context" rev="4.0.4.RELEASE" conf="*->default" />
-    	<dependency org="org.springframework" name="spring-web" rev="4.0.4.RELEASE" conf="*->default" />
+    <dependency org="com.google.guava" name="guava" rev="16.0.1" />
 
-    	<dependency org="com.sun.jersey" name="jersey-client" rev="1.8" conf="*->default" />
-	
-    	<dependency org="com.j256.ormlite" name="ormlite-jdbc" rev="4.48" conf="*->default" />
-    	<dependency org="com.h2database" name="h2" rev="1.4.180" conf="*->default" />
-    	<dependency org="org.eclipse.persistence" name="javax.persistence" rev="2.0.0" conf="*->default" />
-	
-    	<dependency org="org.apache.wicket" name="wicket-core" rev="6.16.0" conf="*->default" />
-    	<dependency org="org.apache.wicket" name="wicket-spring" rev="6.16.0" conf="*->default" />
-    	<dependency org="de.agilecoders.wicket" name="wicket-bootstrap-core" rev="0.9.2" conf="*->default" />
-    	<dependency org="de.agilecoders.wicket" name="wicket-bootstrap-extensions" rev="0.9.2" conf="*->default" />
+    <dependency org="com.github.crawler-commons" name="crawler-commons"
+      rev="0.6" />
 
-		<!--global exclusion -->
-		<exclude module="jmxtools" />
-		<exclude module="jms" />
-		<exclude module="jmxri" />
-        <exclude org="com.thoughtworks.xstream"/>
-        <exclude org="org.apache.mrunit"/>
-        <exclude org="com.thoughtworks.xstream"/>
+    <dependency org="com.martinkl.warc" name="warc-hadoop"
+      rev="0.1.0" />
 
-	</dependencies>
+    <!--dependency org="org.apache.cxf" name="cxf" rev="3.0.4" conf="*->default"/ -->
+    <dependency org="org.apache.cxf" name="cxf-rt-frontend-jaxws"
+      rev="3.0.4" conf="*->default" />
+    <dependency org="org.apache.cxf" name="cxf-rt-frontend-jaxrs"
+      rev="3.0.4" conf="*->default" />
+    <dependency org="org.apache.cxf" name="cxf-rt-transports-http"
+      rev="3.0.4" conf="*->default" />
+    <dependency org="org.apache.cxf" name="cxf-rt-transports-http-jetty"
+      rev="3.0.4" conf="*->default" />
+    <dependency org="org.apache.cxf" name="cxf-rt-rs-client"
+      rev="3.0.4" conf="test->default" />
+    <dependency org="com.fasterxml.jackson.core" name="jackson-databind"
+      rev="2.5.1" conf="*->default" />
+    <dependency org="com.fasterxml.jackson.dataformat" name="jackson-dataformat-cbor"
+      rev="2.5.1" conf="*->default" />
+    <dependency org="com.fasterxml.jackson.jaxrs" name="jackson-jaxrs-json-provider"
+      rev="2.5.1" conf="*->default" />
 
+    <!-- WARC artifacts needed -->
+    <dependency org="org.netpreserve.commons" name="webarchive-commons"
+      rev="1.1.5" conf="*->default">
+      <exclude module="hadoop-core" />
+      <exclude org="com.google.guava" />
+    </dependency>
+
+    <!--artifacts needed for testing -->
+    <dependency org="junit" name="junit" rev="4.11" conf="test->default" />
+    <dependency org="org.mortbay.jetty" name="jetty-client"
+      rev="6.1.22" conf="test->default" />
+    <dependency org="org.mortbay.jetty" name="jetty" rev="6.1.22"
+      conf="test->default" />
+    <dependency org="org.mortbay.jetty" name="jetty-util"
+      rev="6.1.22" conf="test->default" />
+    <!-- end of test artifacts -->
+
+    <!-- web app dependencies -->
+
+    <dependency org="org.apache.commons" name="commons-collections4"
+      rev="4.0" conf="*->default" />
+    <dependency org="org.springframework" name="spring-core"
+      rev="4.0.4.RELEASE" conf="*->default" />
+    <dependency org="org.springframework" name="spring-context"
+      rev="4.0.4.RELEASE" conf="*->default" />
+    <dependency org="org.springframework" name="spring-web"
+      rev="4.0.4.RELEASE" conf="*->default" />
+
+    <dependency org="com.sun.jersey" name="jersey-client"
+      rev="1.8" conf="*->default" />
+
+    <dependency org="com.j256.ormlite" name="ormlite-jdbc"
+      rev="4.48" conf="*->default" />
+    <dependency org="com.h2database" name="h2" rev="1.4.180"
+      conf="*->default" />
+    <dependency org="org.eclipse.persistence" name="javax.persistence"
+      rev="2.0.0" conf="*->default" />
+
+    <dependency org="org.apache.wicket" name="wicket-core"
+      rev="6.16.0" conf="*->default" />
+    <dependency org="org.apache.wicket" name="wicket-spring"
+      rev="6.16.0" conf="*->default" />
+    <dependency org="de.agilecoders.wicket" name="wicket-bootstrap-core"
+      rev="0.9.2" conf="*->default" />
+    <dependency org="de.agilecoders.wicket" name="wicket-bootstrap-extensions"
+      rev="0.9.2" conf="*->default" />
+
+    <!--global exclusion -->
+    <exclude module="jmxtools" />
+    <exclude module="jms" />
+    <exclude module="jmxri" />
+    <exclude org="com.thoughtworks.xstream" />
+    <exclude org="org.apache.mrunit" />
+    <exclude org="com.thoughtworks.xstream" />
+
+  </dependencies>
+
 </ivy-module>
Index: ivy/ivysettings.xml
===================================================================
--- ivy/ivysettings.xml	(revision 1715901)
+++ ivy/ivysettings.xml	(working copy)
@@ -28,6 +28,9 @@
   <property name="oss.sonatype.org" 
     value="http://oss.sonatype.org/content/repositories/releases/" 
     override="false"/>
+  <property name="sonatype" 
+    value="https://oss.sonatype.org/content/groups/public/" 
+    override="false"/>
   <property name="repo.maven.org"
     value="http://repo1.maven.org/maven2/"
     override="false"/>
@@ -54,16 +57,22 @@
       changingPattern=".*SNAPSHOT.*" 
       checkmodified="true"
       />
-    <ibiblio name="sonatype"
+    <ibiblio name="sonatype-releases"
       root="${oss.sonatype.org}"
       pattern="${maven2.pattern.ext}"
       m2compatible="true"
       />
+    <ibiblio name="sonatype-groups"
+      root="${sonatype}"
+      pattern="${maven2.pattern.ext}"
+      m2compatible="true"
+    />
     <chain name="default" dual="true">
       <resolver ref="local"/>
       <resolver ref="maven2"/>
       <resolver ref="apache-snapshot"/>
-      <resolver ref="sonatype"/>
+      <resolver ref="sonatype-releases"/>
+      <resolver ref="sonatype-groups"/>
     </chain>
     <chain name="internal">
       <resolver ref="local"/>
@@ -74,7 +83,8 @@
     <chain name="external-and-snapshots">
       <resolver ref="maven2"/>
       <resolver ref="apache-snapshot"/>
-      <resolver ref="sonatype"/>
+      <resolver ref="sonatype-releases"/>
+      <resolver ref="sonatype-groups"/>
     </chain>
   </resolvers>
   <modules>
Index: src/bin/nutch
===================================================================
--- src/bin/nutch	(revision 1715901)
+++ src/bin/nutch	(working copy)
@@ -132,11 +132,12 @@
 
 JAVA="$JAVA_HOME/bin/java"
 JAVA_HEAP_MAX=-Xmx1000m 
+NUTCH_HEAPSIZE=6000
 
 # check envvars which might override default args
 if [ "$NUTCH_HEAPSIZE" != "" ]; then
   #echo "run with heapsize $NUTCH_HEAPSIZE"
-  JAVA_HEAP_MAX="-Xmx""$NUTCH_HEAPSIZE""m"
+  JAVA_HEAP_MAX="-Xmx""$NUTCH_HEAPSIZE"
   #echo $JAVA_HEAP_MAX
 fi
 
Index: src/java/org/apache/nutch/indexer/IndexerMapReduce.java
===================================================================
--- src/java/org/apache/nutch/indexer/IndexerMapReduce.java	(revision 1715901)
+++ src/java/org/apache/nutch/indexer/IndexerMapReduce.java	(working copy)
@@ -275,15 +275,15 @@
     }
 
     NutchDocument doc = new NutchDocument();
-    doc.add("id", key.toString());
+    //doc.add("id", key.toString());
 
     final Metadata metadata = parseData.getContentMeta();
 
     // add segment, used to map from merged index back to segment files
-    doc.add("segment", metadata.get(Nutch.SEGMENT_NAME_KEY));
+    //doc.add("segment", metadata.get(Nutch.SEGMENT_NAME_KEY));
 
     // add digest, used by dedup
-    doc.add("digest", metadata.get(Nutch.SIGNATURE_KEY));
+    //doc.add("digest", metadata.get(Nutch.SIGNATURE_KEY));
 
     final Parse parse = new ParseImpl(parseText, parseData);
     try {
@@ -347,7 +347,7 @@
         binary = Base64.encodeBase64String(StringUtils.getBytesUtf8(binary));
       }
 
-      doc.add("binaryContent", binary);
+      doc.add("raw_content", binary);
     }
 
     reporter.incrCounter("IndexerStatus", "indexed (add/update)", 1);
Index: src/java/org/apache/nutch/indexer/IndexingJob.java
===================================================================
--- src/java/org/apache/nutch/indexer/IndexingJob.java	(revision 1715901)
+++ src/java/org/apache/nutch/indexer/IndexingJob.java	(working copy)
@@ -165,7 +165,6 @@
   public int run(String[] args) throws Exception {
     if (args.length < 2) {
       System.err
-      //.println("Usage: Indexer <crawldb> [-linkdb <linkdb>] [-params k1=v1&k2=v2...] (<segment> ... | -dir <segments>) [-noCommit] [-deleteGone] [-filter] [-normalize]");
       .println("Usage: Indexer <crawldb> [-linkdb <linkdb>] [-params k1=v1&k2=v2...] (<segment> ... | -dir <segments>) [-noCommit] [-deleteGone] [-filter] [-normalize] [-addBinaryContent] [-base64]");
       IndexWriters writers = new IndexWriters(getConf());
       System.err.println(writers.describe());
Index: src/java/org/apache/nutch/indexer/NutchDocument.java
===================================================================
--- src/java/org/apache/nutch/indexer/NutchDocument.java	(revision 1715901)
+++ src/java/org/apache/nutch/indexer/NutchDocument.java	(working copy)
@@ -30,6 +30,7 @@
 import org.apache.hadoop.io.Writable;
 import org.apache.hadoop.io.WritableUtils;
 import org.apache.nutch.metadata.Metadata;
+import org.json.simple.JSONObject;
 
 /** A {@link NutchDocument} is the unit of indexing. */
 public class NutchDocument implements Writable,
Index: src/plugin/build.xml
===================================================================
--- src/plugin/build.xml	(revision 1715901)
+++ src/plugin/build.xml	(working copy)
@@ -33,6 +33,7 @@
      <ant dir="index-anchor" target="deploy"/>
      <ant dir="index-geoip" target="deploy"/>
      <ant dir="index-more" target="deploy"/>
+     <ant dir="index-memex-atf" target="deploy"/>
      <ant dir="index-replace" target="deploy"/>
      <ant dir="index-static" target="deploy"/>
      <ant dir="index-metadata" target="deploy"/>
@@ -42,6 +43,7 @@
      <ant dir="indexer-dummy" target="deploy"/>
      <ant dir="indexer-elastic" target="deploy"/>
      <ant dir="indexer-solr" target="deploy"/>
+     <ant dir="indexer-memex" target="deploy"/>
      <ant dir="language-identifier" target="deploy"/>
      <ant dir="lib-http" target="deploy"/>
      <ant dir="lib-nekohtml" target="deploy"/>
@@ -142,6 +144,7 @@
     <ant dir="index-anchor" target="clean"/>
     <ant dir="index-geoip" target="clean"/>
     <ant dir="index-more" target="clean"/>
+    <ant dir="index-memex-atf" target="clean"/>
     <ant dir="index-static" target="clean"/>
     <ant dir="index-replace" target="clean"/>
     <ant dir="index-metadata" target="clean"/>
@@ -150,6 +153,7 @@
     <ant dir="indexer-cloudsearch" target="clean"/>
     <ant dir="indexer-dummy" target="clean"/>
     <ant dir="indexer-elastic" target="clean"/>
+    <ant dir="indexer-memex" target="clean"/>
     <ant dir="indexer-solr" target="clean"/>
     <ant dir="language-identifier" target="clean"/>
     <!-- <ant dir="lib-commons-httpclient" target="clean"/> -->
Index: src/plugin/index-memex-atf/build.xml
===================================================================
--- src/plugin/index-memex-atf/build.xml	(revision 0)
+++ src/plugin/index-memex-atf/build.xml	(working copy)
@@ -0,0 +1,22 @@
+<?xml version="1.0"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<project name="index-memex-atf" default="jar-core">
+
+  <import file="../build-plugin.xml"/>
+
+</project>
Index: src/plugin/index-memex-atf/ivy.xml
===================================================================
--- src/plugin/index-memex-atf/ivy.xml	(revision 0)
+++ src/plugin/index-memex-atf/ivy.xml	(working copy)
@@ -0,0 +1,41 @@
+<?xml version="1.0" ?>
+
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+   contributor license agreements.  See the NOTICE file distributed with
+   this work for additional information regarding copyright ownership.
+   The ASF licenses this file to You under the Apache License, Version 2.0
+   (the "License"); you may not use this file except in compliance with
+   the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+-->
+
+<ivy-module version="1.0">
+  <info organisation="org.apache.nutch" module="${ant.project.name}">
+    <license name="Apache 2.0"/>
+    <ivyauthor name="Apache Nutch Team" url="http://nutch.apache.org"/>
+    <description>
+        Apache Nutch
+    </description>
+  </info>
+
+  <configurations>
+    <include file="../../..//ivy/ivy-configurations.xml"/>
+  </configurations>
+
+  <publications>
+    <!--get the artifact from our module name-->
+    <artifact conf="master"/>
+  </publications>
+
+  <dependencies>
+  </dependencies>
+  
+</ivy-module>
Index: src/plugin/index-memex-atf/plugin.xml
===================================================================
--- src/plugin/index-memex-atf/plugin.xml	(revision 0)
+++ src/plugin/index-memex-atf/plugin.xml	(working copy)
@@ -0,0 +1,42 @@
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<plugin
+   id="index-memex-atf"
+   name="Memex ATF ES Indexing Filter"
+   version="1.0.0"
+   provider-name="nutch.org">
+
+
+   <runtime>
+      <library name="index-memex-atf.jar">
+         <export name="*"/>
+      </library>
+   </runtime>
+
+   <requires>
+      <import plugin="nutch-extensionpoints"/>
+   </requires>
+
+   <extension id="org.apache.nutch.index.memex.atf"
+              name="Nutch Memex ATF Indexing Filter"
+              point="org.apache.nutch.indexer.IndexingFilter">
+      <implementation id="MemexATFIndexingFilter"
+         class="org.apache.nutch.index.memex.atf.MemexATFIndexingFilter"/>
+   </extension>
+
+</plugin>
+
Index: src/plugin/index-memex-atf/src/java/org/apache/nutch/index/memex/atf/MemexATFIndexingFilter.java
===================================================================
--- src/plugin/index-memex-atf/src/java/org/apache/nutch/index/memex/atf/MemexATFIndexingFilter.java	(revision 0)
+++ src/plugin/index-memex-atf/src/java/org/apache/nutch/index/memex/atf/MemexATFIndexingFilter.java	(working copy)
@@ -0,0 +1,215 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.nutch.index.memex.atf;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.net.MalformedURLException;
+import java.util.HashMap;
+import java.util.Locale;
+import org.apache.commons.codec.digest.DigestUtils;
+import org.apache.commons.lang.StringUtils;
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.io.Text;
+import org.apache.hadoop.io.Writable;
+import org.apache.nutch.crawl.CrawlDatum;
+import org.apache.nutch.crawl.Inlinks;
+import org.apache.nutch.indexer.IndexingException;
+import org.apache.nutch.indexer.IndexingFilter;
+import org.apache.nutch.indexer.NutchDocument;
+import org.apache.nutch.net.protocols.Response;
+import org.apache.nutch.parse.Parse;
+import org.apache.nutch.util.MimeUtil;
+import org.apache.nutch.util.TableUtil;
+import org.apache.tika.Tika;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * <p>An {@link org.apache.nutch.indexer.IndexingFilter} which augments
+ * {@link org.apache.nutch.indexer.NutchDocument}'s with the 
+ * <a href="https://www.memexproxy.com/wiki/display/MPM/CDR+Schema">following additional fields</a></p>
+ * <p>This plugin is specific to the Memex domains tasks and is used
+ * specifically to augment documents prior to them being indexed into a master
+ * ElasticSearch cluster.</p>
+ */
+public class MemexATFIndexingFilter implements IndexingFilter {
+
+  public static final Logger LOG = LoggerFactory
+      .getLogger(MemexATFIndexingFilter.class);
+
+  private Configuration conf;
+
+  private MimeUtil MIME;
+
+  private HashMap<String, String> mimeMap = null;
+
+  private boolean mapMimes = false;
+
+  /**
+   * 
+   * @param doc
+   *          The {@link org.apache.nutch.indexer.NutchDocument} object
+   * @param parse
+   *          The relevant {@link org.apache.nutch.parse.Parse} object passing through the filter
+   * @param url
+   *          URL key to be filtered for corresponding fields
+   * @param datum
+   *          The {@link org.apache.nutch.crawl.CrawlDatum} entry relative to the URL key
+   * @param inlinks
+   *          The {@link org.apache.nutch.crawl.Inlinks} for the given URL
+   * @return filtered {@link org.apache.nutch.indexer.NutchDocument}
+   * @see org.apache.nutch.indexer.IndexingFilter#filter(org.apache.nutch.indexer.NutchDocument, 
+   * org.apache.nutch.parse.Parse, org.apache.hadoop.io.Text, org.apache.nutch.crawl.CrawlDatum, 
+   * org.apache.nutch.crawl.Inlinks)
+   */
+  @Override
+  public NutchDocument filter(NutchDocument doc, Parse parse, Text url,
+      CrawlDatum datum, Inlinks inlinks) throws IndexingException {
+    Tika tika = new Tika();
+    doc.add("_id", (DigestUtils.sha256Hex(url.getBytes() + "-" + datum.getFetchTime())).toUpperCase(Locale.getDefault()));
+    if (datum.getMetaData().containsKey("parent")) {
+      doc.add("_parent", datum.getMetaData().get("_parent"));
+    } else {
+      doc.add("_parent", DigestUtils.sha256Hex(inlinks.iterator().next().getFromUrl().getBytes())); // + "-" + datum.getFetchTime()).toUpperCase(Locale.getDefault())
+    }
+    doc.add("adjudication", (short)0);
+    doc.add("annotation1", (short)0);
+    doc.add("annotation2", (short)0);
+
+    //get content_type
+    String mimeType = null;
+    String contentType = null;
+
+    Writable tcontentType = datum.getMetaData().get(
+        new Text(Response.CONTENT_TYPE));
+    if (tcontentType != null) {
+      contentType = tcontentType.toString();
+    } else
+      contentType = parse.getData().getMeta(Response.CONTENT_TYPE);
+    if (contentType == null) {
+      mimeType = tika.detect(url.toString());
+    } else {
+      mimeType = MIME.forName(MimeUtil.cleanMimeType(contentType));
+    }
+
+    // Checks if we solved the content-type.
+    if (mimeType == null) {
+      return doc;
+    }
+
+    // Check if we have to map mime types
+    if (mapMimes) {
+      // Check if the current mime is mapped
+      if (mimeMap.containsKey(mimeType)) {
+        // It's mapped, let's replace it
+        mimeType = mimeMap.get(mimeType);
+      }
+    }
+
+    contentType = mimeType;
+    doc.add("content_type", contentType);
+    doc.add("crawl_data", parse.getData().getContentMeta().toString());
+    doc.add("crawler", "Nutch-1.11-SNAPSHOT");
+    doc.add("extracted_metadata", parse.getData().getParseMeta().toString());
+    doc.add("extracted_text", parse.getText());
+    doc.add("obj_original_url", url.toString());
+
+    if (contentType.trim() != "text/html" || contentType.trim() != "application/xhtml+xml") {
+      String[] reversedURL = null;
+      try {
+        reversedURL = TableUtil.reverseUrl(url.toString()).split(":");
+      } catch (MalformedURLException e) {
+        e.printStackTrace();
+      }
+      reversedURL[0] = reversedURL[0].replace('.', '/');
+
+      // URLs with content at a folder level and nested below that
+      // run into problems when dumping. For example:
+      //
+      // www.foo.com/bar/
+      // www.foo.com/bar/about.html
+      //
+      // One of these will fail to dump depending on processing order.
+      // To address this, we will use a placeholder when dumping a URL
+      // such as the one ending in '/bar/'
+      String lastDir = reversedURL[reversedURL.length - 1];
+      if (! lastDir.contains(".")) {
+        if (lastDir.charAt(lastDir.length() - 1) != '/') {
+          reversedURL[reversedURL.length - 1] += '/';
+        }
+        reversedURL[reversedURL.length - 1] += "_file";
+      }
+
+      String reversedURLPath = org.apache.commons.lang3.StringUtils.join(reversedURL, "/");
+      doc.add("obj_stored_url", "https://crawl-jpl.s3.amazonaws.com/obj_stored_url" + reversedURLPath);
+    } else {
+      doc.add("obj_stored_url", "");
+    }
+
+    doc.add("team", "NASA_JPL");
+    doc.add("timestamp", datum.getFetchTime());
+    doc.add("url", url.toString());
+    doc.add("version", (float)2.0);
+
+    return doc;
+  }
+
+  public void setConf(Configuration conf) {
+    this.conf = conf;
+    MIME = new MimeUtil(conf);
+
+    if (conf.getBoolean("moreIndexingFilter.mapMimeTypes", false) == true) {
+      mapMimes = true;
+
+      // Load the mapping
+      try {
+        readConfiguration();
+      } catch (Exception e) {
+        LOG.error(org.apache.hadoop.util.StringUtils.stringifyException(e));
+      }
+    }
+  }
+
+  public Configuration getConf() {
+    return this.conf;
+  }
+
+  private void readConfiguration() throws IOException {
+    BufferedReader reader = new BufferedReader(
+        conf.getConfResourceAsReader("contenttype-mapping.txt"));
+    String line;
+    String parts[];
+
+    mimeMap = new HashMap<String, String>();
+
+    while ((line = reader.readLine()) != null) {
+      if (StringUtils.isNotBlank(line) && !line.startsWith("#")) {
+        line.trim();
+        parts = line.split("\t");
+
+        // Must be at least two parts
+        if (parts.length > 1) {
+          for (int i = 1; i < parts.length; i++) {
+            mimeMap.put(parts[i].trim(), parts[0].trim());
+          }
+        }
+      }
+    }
+  }
+
+}
Index: src/plugin/index-memex-atf/src/java/org/apache/nutch/index/memex/atf/package-info.java
===================================================================
--- src/plugin/index-memex-atf/src/java/org/apache/nutch/index/memex/atf/package-info.java	(revision 0)
+++ src/plugin/index-memex-atf/src/java/org/apache/nutch/index/memex/atf/package-info.java	(working copy)
@@ -0,0 +1,41 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+/**
+ * <p>An {@link org.apache.nutch.indexer.IndexingFilter} which augments
+ * {@link org.apache.nutch.indexer.NutchDocument}'s with the following
+ * additional fields</p>
+ * <pre>
+ * {@code
+ *  {
+ *   url : <url of raw page>,
+ *   timestamp: <timestamp for data when scraped, in epoch milliseconds>,
+ *   team: <name of crawling team>,
+ *   crawler: <name of crawler; each type of crawler should have a distinct name or reference>,
+ *   raw_content: <full text of raw crawled page>,
+ *   content_type: <IANA mimetype representing the crawl_data content>,
+ *   crawl_data {
+ *     content: <optional; used to store cleaned/processed text, etc>,
+ *     images:[an array of URIs to the images present within the document],
+ *     videos:[an array of URIs to the videos present within the document]
+ *   }
+ * }
+ * </pre>
+ * <p>This plugin is specific to the Memex ATF domain task and is use used
+ * specifically to augment documents prior to them being indexed into a master
+ * ElasticSearch cluster.</p>
+ */
+package org.apache.nutch.index.memex.atf;
\ No newline at end of file
Index: src/plugin/indexer-memex/build-ivy.xml
===================================================================
--- src/plugin/indexer-memex/build-ivy.xml	(revision 0)
+++ src/plugin/indexer-memex/build-ivy.xml	(working copy)
@@ -0,0 +1,54 @@
+<?xml version="1.0"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<project name="indexer-memex" default="deps-jar" xmlns:ivy="antlib:org.apache.ivy.ant">
+
+    <property name="ivy.install.version" value="2.1.0" />
+    <condition property="ivy.home" value="${env.IVY_HOME}">
+      <isset property="env.IVY_HOME" />
+    </condition>
+    <property name="ivy.home" value="${user.home}/.ant" />
+    <property name="ivy.checksums" value="" />
+    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
+    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
+
+    <target name="download-ivy" unless="offline">
+
+        <mkdir dir="${ivy.jar.dir}"/>
+        <!-- download Ivy from web site so that it can be used even without any special installation -->
+        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
+             dest="${ivy.jar.file}" usetimestamp="true"/>
+    </target>
+
+    <target name="init-ivy" depends="download-ivy">
+      <!-- try to load ivy here from ivy home, in case the user has not already dropped
+              it into ant's lib dir (note that the latter copy will always take precedence).
+              We will not fail as long as local lib dir exists (it may be empty) and
+              ivy is in at least one of ant's lib dir or the local lib dir. -->
+        <path id="ivy.lib.path">
+            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
+
+        </path>
+        <taskdef resource="org/apache/ivy/ant/antlib.xml"
+                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
+    </target>
+
+  <target name="deps-jar" depends="init-ivy">
+    <ivy:retrieve pattern="lib/[artifact]-[revision].[ext]"/>
+  </target>
+
+</project>
Index: src/plugin/indexer-memex/build.xml
===================================================================
--- src/plugin/indexer-memex/build.xml	(revision 0)
+++ src/plugin/indexer-memex/build.xml	(working copy)
@@ -0,0 +1,22 @@
+<?xml version="1.0"?>
+<!--
+ Licensed to the Apache Software Foundation (ASF) under one or more
+ contributor license agreements.  See the NOTICE file distributed with
+ this work for additional information regarding copyright ownership.
+ The ASF licenses this file to You under the Apache License, Version 2.0
+ (the "License"); you may not use this file except in compliance with
+ the License.  You may obtain a copy of the License at
+
+     http://www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<project name="indexer-memex" default="jar-core">
+
+  <import file="../build-plugin.xml" />
+
+</project>
Index: src/plugin/indexer-memex/howto_upgrade.txt
===================================================================
--- src/plugin/indexer-memex/howto_upgrade.txt	(revision 0)
+++ src/plugin/indexer-memex/howto_upgrade.txt	(working copy)
@@ -0,0 +1,6 @@
+1. Upgrade indexer-memex dependencies in src/plugin/indexer-memex/ivy.xml
+
+2. Upgrade the jest specific dependencies in src/plugin/indexer-memex/plugin.xml
+   To get the list of dependencies and their versions execute:
+   $ ant -f ./build-ivy.xml
+   $ ls lib/
Index: src/plugin/indexer-memex/ivy.xml
===================================================================
--- src/plugin/indexer-memex/ivy.xml	(revision 0)
+++ src/plugin/indexer-memex/ivy.xml	(working copy)
@@ -0,0 +1,43 @@
+<?xml version="1.0" ?>
+
+<!--
+   Licensed to the Apache Software Foundation (ASF) under one or more
+   contributor license agreements.  See the NOTICE file distributed with
+   this work for additional information regarding copyright ownership.
+   The ASF licenses this file to You under the Apache License, Version 2.0
+   (the "License"); you may not use this file except in compliance with
+   the License.  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+-->
+
+<ivy-module version="1.0">
+  <info organisation="org.apache.nutch" module="${ant.project.name}">
+    <license name="Apache 2.0"/>
+    <ivyauthor name="Apache Nutch Team" url="http://nutch.apache.org"/>
+    <description>
+        Apache Nutch
+    </description>
+  </info>
+
+  <configurations>
+    <include file="../../..//ivy/ivy-configurations.xml"/>
+  </configurations>
+
+  <publications>
+    <!--get the artifact from our module name-->
+    <artifact conf="master"/>
+  </publications>
+
+  <dependencies>
+    <dependency org="io.searchbox" name="jest" rev="2.0.0"
+        conf="*->default"/>
+  </dependencies>
+  
+</ivy-module>
Index: src/plugin/indexer-memex/plugin.xml
===================================================================
--- src/plugin/indexer-memex/plugin.xml	(revision 0)
+++ src/plugin/indexer-memex/plugin.xml	(working copy)
@@ -0,0 +1,75 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+  Licensed to the Apache Software Foundation (ASF) under one or more
+  contributor license agreements.  See the NOTICE file distributed with
+  this work for additional information regarding copyright ownership.
+  The ASF licenses this file to You under the Apache License, Version 2.0
+  (the "License"); you may not use this file except in compliance with
+  the License.  You may obtain a copy of the License at
+  
+  http://www.apache.org/licenses/LICENSE-2.0
+  
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+-->
+<plugin id="indexer-memex" name="MemexIndexWriter" version="1.0.0"
+  provider-name="nutch.apache.org">
+
+  <runtime>
+    <library name="indexer-memex.jar">
+      <export name="*" />
+    </library>
+    
+    <library name="commons-codec-1.9.jar">
+      <export name="*"/>
+    </library>
+    <library name="commons-lang3-3.4.jar">
+      <export name="*"/>
+    </library>
+    <library name="commons-logging-1.2.jar">
+      <export name="*"/>
+    </library>
+    <library name="gson-2.4.jar">
+      <export name="*"/>
+    </library>
+    <library name="guava-18.0.jar">
+      <export name="*"/>
+    </library>
+    <library name="httpasyncclient-4.1.1.jar">
+      <export name="*"/>
+    </library>
+    <library name="httpclient-4.5.1.jar">
+      <export name="*"/>
+    </library>
+    <library name="httpcore-4.4.4.jar">
+      <export name="*"/>
+    </library>
+    <library name="httpcore-nio-4.4.4.jar">
+      <export name="*"/>
+    </library>
+    <library name="jest-2.0.0.jar">
+      <export name="*"/>
+    </library>
+    <library name="jest-common-2.0.0.jar">
+      <export name="*"/>
+    </library>
+    <library name="slf4j-api-1.7.13.jar">
+      <export name="*"/>
+    </library>
+  </runtime>
+
+  <requires>
+    <import plugin="nutch-extensionpoints" />
+  </requires>
+
+  <extension id="org.apache.nutch.indexer.memex"
+    name="Memex Index Writer"
+    point="org.apache.nutch.indexer.IndexWriter">
+    <implementation id="MemexIndexWriter"
+      class="org.apache.nutch.indexwriter.memex.MemexIndexWriter" />
+  </extension>
+
+</plugin>
Index: src/plugin/indexer-memex/src/java/org/apache/nutch/indexwriter/memex/MemexIndexWriter.java
===================================================================
--- src/plugin/indexer-memex/src/java/org/apache/nutch/indexwriter/memex/MemexIndexWriter.java	(revision 0)
+++ src/plugin/indexer-memex/src/java/org/apache/nutch/indexwriter/memex/MemexIndexWriter.java	(working copy)
@@ -0,0 +1,171 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.nutch.indexwriter.memex;
+
+import io.searchbox.action.BulkableAction;
+import io.searchbox.client.JestClient;
+import io.searchbox.client.JestClientFactory;
+import io.searchbox.client.config.HttpClientConfig;
+import io.searchbox.core.Bulk;
+import io.searchbox.core.Index;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.mapred.JobConf;
+import org.apache.nutch.indexer.IndexWriter;
+import org.apache.nutch.indexer.NutchDocument;
+
+/**
+ * <p>An {@link org.apache.nutch.indexer.IndexingWriter} which writes
+ * {@link org.apache.nutch.indexer.NutchDocument}'s into an ElasticSearch
+ * index in the following schema. This schema is defined within the 
+ * {@link org.apache.nutch.index.memex.atf.MemexATFIndexingFilter}</p>
+ * <p>This plugin is specific to the Memex ATF domain task and is use used
+ * specifically to augment documents prior to them being indexed into a master
+ * ElasticSearch cluster.</p>
+ */
+public class MemexIndexWriter implements IndexWriter {
+
+  private JestClientFactory factory;
+
+  private JestClient client;
+
+  private Configuration config;
+
+  private final List<Map<String, Object>> inputDocs = new ArrayList<Map<String, Object>>();
+
+  private int batchSize = 50;
+
+
+  /**
+   * @see org.apache.hadoop.conf.Configurable#getConf()
+   */
+  @Override
+  public Configuration getConf() {
+    return config;
+  }
+
+  /**
+   * @see org.apache.hadoop.conf.Configurable#setConf(org.apache.hadoop.conf.Configuration)
+   */
+  @Override
+  public void setConf(Configuration conf) {
+    config = conf;
+  }
+
+
+  /**
+   * 
+   * @see org.apache.nutch.indexer.IndexWriter#open(org.apache.hadoop.mapred.JobConf, java.lang.String)
+   */
+  @Override
+  public void open(JobConf job, String name) throws IOException {
+    factory = new JestClientFactory();
+    factory.setHttpClientConfig(new HttpClientConfig.
+        Builder(job.get(MemexConstants.CLUSTER)).multiThreaded(true)
+        .defaultCredentials(job.get(MemexConstants.USERNAME), job.get(MemexConstants.PASSWORD))
+        .connTimeout(300000)
+        .build());
+    client = factory.getObject();
+  }
+
+  /**
+   * @see org.apache.nutch.indexer.IndexWriter#write(org.apache.nutch.indexer.NutchDocument)
+   */
+  @Override
+  public void write(NutchDocument doc) throws IOException {
+    buildElasticDocument(doc);
+    if (inputDocs.size() > batchSize) {
+      Bulk bulk = new Bulk.Builder()
+          .defaultIndex(getConf().get(MemexConstants.INDEX))
+          .defaultType(getConf().get(MemexConstants.TYPE))
+          .addAction((BulkableAction<?>) inputDocs)
+          .build();
+      client.execute(bulk);
+    }
+  }
+
+  @SuppressWarnings("unchecked")
+  private void buildElasticDocument(NutchDocument doc) throws IOException {
+    Map<String, Object> source = new LinkedHashMap<String, Object>();
+    for (String docField : doc.getFieldNames()) {
+      source.put(doc.getField(docField).toString(), doc.getFieldValue(docField));
+    }
+
+    inputDocs.add((Map<String, Object>) new Index.Builder(source).build());
+  }
+
+  /* (non-Javadoc)
+   * @see org.apache.nutch.indexer.IndexWriter#delete(java.lang.String)
+   */
+  @Override
+  public void delete(String key) throws IOException {
+    // TODO Auto-generated method stub
+
+  }
+
+  /**
+   * @see org.apache.nutch.indexer.IndexWriter#update(org.apache.nutch.indexer.NutchDocument)
+   */
+  @Override
+  public void update(NutchDocument doc) throws IOException {
+    write(doc);;
+
+  }
+
+  /* (non-Javadoc)
+   * @see org.apache.nutch.indexer.IndexWriter#commit()
+   */
+  @Override
+  public void commit() throws IOException {
+    // TODO Auto-generated method stub
+
+  }
+
+  /* (non-Javadoc)
+   * @see org.apache.nutch.indexer.IndexWriter#close()
+   */
+  @Override
+  public void close() throws IOException {
+
+  }
+
+  /**
+   * @see org.apache.nutch.indexer.IndexWriter#describe()
+   */
+  @Override
+  public String describe() {
+    StringBuffer sb = new StringBuffer("MemexIndexWriter\n");
+    sb.append("\t").append(MemexConstants.CLUSTER)
+    .append(" : URL of the Memex Elastic Search cluster to be connecting with.\n");
+    sb.append("\t").append(MemexConstants.INDEX)
+    .append(" : the collection of documents that have somewhat similar characteristics.\n");
+    sb.append("\t").append(MemexConstants.PASSWORD)
+    .append(" : password for authentication\n");
+    sb.append("\t").append(MemexConstants.TYPE)
+    .append(" : the logical category/partition of the index we wish to write documents to\n");
+    sb.append("\t").append(MemexConstants.USERNAME)
+    .append(" : username for authentication\n");
+    return sb.toString();
+  }
+
+}
Index: src/plugin/indexer-memex/src/java/org/apache/nutch/indexwriter/memex/package-info.java
===================================================================
--- src/plugin/indexer-memex/src/java/org/apache/nutch/indexwriter/memex/package-info.java	(revision 0)
+++ src/plugin/indexer-memex/src/java/org/apache/nutch/indexwriter/memex/package-info.java	(working copy)
@@ -0,0 +1,42 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+/**
+ * <p>An {@link org.apache.nutch.indexer.IndexingWriter} which writes
+ * {@link org.apache.nutch.indexer.NutchDocument}'s into an ElasticSearch
+ * index in the following schema. This schema is defined within the 
+ * {@link org.apache.nutch.index.memex.atf.MemexATFIndexingFilter}</p>
+ * <pre>
+ * {@code
+ *  {
+ *   url : <url of raw page>,
+ *   timestamp: <timestamp for data when scraped, in epoch milliseconds>,
+ *   team: <name of crawling team>,
+ *   crawler: <name of crawler; each type of crawler should have a distinct name or reference>,
+ *   raw_content: <full text of raw crawled page>,
+ *   content_type: <IANA mimetype representing the crawl_data content>,
+ *   crawl_data {
+ *     content: <optional; used to store cleaned/processed text, etc>,
+ *     images:[an array of URIs to the images present within the document],
+ *     videos:[an array of URIs to the videos present within the document]
+ *   }
+ * }
+ * </pre>
+ * <p>This plugin is specific to the Memex ATF domain task and is use used
+ * specifically to augment documents prior to them being indexed into a master
+ * ElasticSearch cluster.</p>
+ */
+package org.apache.nutch.indexwriter.memex;
\ No newline at end of file
